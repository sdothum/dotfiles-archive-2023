# sdothum - 2016 (c) wtfpl

# Make
# ══════════════════════════════════════════════════════════════════════════════

# ...................................................................... iosevka

usage() { 
  echo "usage: $(basename $0) iosevka [kindle | kobo | ebook | web] [family <name>]
                            [elementary | grotesk | D-serifless | I-serifless | Q-crossing | Q-detached | Q-hook | a-single | b-rounded | d-tailed | d-toothless | f-extended | p-eared | p-serifed | q-hook | at-tall | 0-split | paren-flat | [cap off | <parm>] | space <parm> | book+regular | latin+greek]*
                            [[version 10x | 15x] -- <opions>*]"
  exit 1
}

# e.g. with optional glyph variants..
#        make_install iosevka kobo                                               # default kobo fonts
#        make_install iosevka kobo a-single f-extended I-serifless family aFont  # custom e-ink font
#        make_install iosevka                                                    # default desktop fonts
#        make_install iosevka grotesk                                            # grotesk style desktop fonts
#        make_install iosevka elementary                                         # elementary style desktop fonts
#        make_install iosevka -- I-serifless family forCoding                    # single custom font, see font/iosevka
#        make_install iosevka version 10x -- dyslexic kobo english I-serifless f-extended q-hook cap extended family Grotesk  # single custom ebook font with extended cap height

MAKE_INSTALL=/tmp/iosevka:make_install
SRCDIR=$HOME/bin/functions/font
DEPOT=/net/depot
GLYPH=b-rounded
cap='cap extended'  # new make_install default, "cap off" to disable

touch $MAKE_INSTALL
trap "rm -f $MAKE_INSTALL; pkill -f iosevka" EXIT INT 
shift

glyph() { unset b d p; eval $1=$2; GLYPH=$2; }

version() {
  [ -L $SRCDIR/iosevka ] && rm -f $SRCDIR/iosevka
  [ -L $DEPOT/Iosevka ]  && rm -f $DEPOT/Iosevka
  ln -s $SRCDIR/iosevka.$1 $SRCDIR/iosevka || usage
  ln -s $DEPOT/Iosevka.$1  $DEPOT/Iosevka  || usage
}

while [ $1 ] ;do
  case $1 in
  D-serifless ) D=D-serifless ;;
  I-serifless ) I=I-serifless ;;               # source code variant
  Q-crossing  ) Q=Q-crossing ;;
  Q-detached  ) Q=Q-detached ;;
  Q-hook      ) Q=Q-hook ;;
  a-single    ) a=a-single ;;
  b-rounded   ) glyph b b-rounded ;;           # unolexic
  d-tailed    ) glyph d d-tailed ;;            # ebook variant
  d-toothless ) glyph d d-toothless ;;         # with p-eared
  f-extended  ) f=f-extended ;;                # unolexic (homage to universal grotesk)
  p-eared     ) glyph p p-eared ;;
  p-serifed   ) glyph p p-serifed ;;
  q-hook      ) q=q-hook ;;                    # ebook variant
  at-tall     ) at=at-tall ;;                  # source code variant
  0-split     ) zero=0-split ;;
  paren-flat  ) paren=paren-flat ;;            # source code variant
  book+regular) adjust=book+regular ;;
  latin+greek ) language=latin+greek ;;
  cap         ) [ $2 ] && { [ $2 = 'off' ] && unset cap || cap="$1 $2"; shift; } || usage ;;
  space       ) [ $2 ] && { space="$1 $2"; shift; } || usage ;;
  source-only ) source_only=true ;;
  elementary  ) style=$1 ;;
  grotesk     ) style=$1 ;;
  kindle      ) ereader=$1; sb='sb 0.6150' ;;  # side bearing difference to kobo's font rendering
  kobo        ) ereader=$1; q=q-hook ;;
  family      ) [ $ereader ] && [ $2 ] && { family=$2; shift; } || usage ;;
  ebook       ) ebook=true ;;
  web         ) web=true ;;
  version     ) [ $2 ] && { version $2; shift; } || usage ;;
  --          ) shift; . $HOME/bin/functions/font/iosevka $@; exit ;;
  *           ) usage ;;
  esac
  shift
done

# build font suite
ifno 'build iosevka font suite' && exit

update() {
  fonts='*-book *-bookitalic *-bold *-bolditalic'
  cd $HOME/.fonts/$2

  for i in $fonts ;do
    # supplementary glyphs (as uncovered from ebooks)
    fforge map $i 2e22 300c  # add corner bracket punctuation
    fforge map $i 2e25 300d
    # e-reader font folders
    file=$i.ttf
    folder=$STOW/$ereader/fonts/$1
    mkdir -p $folder
    cp -v $file $folder/
  done
}

options() { echo $D $I $Q $a $b $d $f $p $q $zero $at $paren $adjust $cap $sb $style $@; }  # list

# family [options]*
e_ink() {
  name=$1
  shift
  iosevka dyslexic $ereader ${language:-english} $(options $@) $space family $name
  update $GLYPH $name
}

dfont() { iosevka expanded at-tall     $(options $@) q-hook; }
wfont() { iosevka english I-serifless  $(options $@) q-hook; }
efont() { iosevka ${language:-english} $(options $@) q-hook; }

if [ $family ] ;then
  version 10x
  # custom e-ink font (non-published)
  e_ink $family

elif [ $ereader ] ;then
  version 10x
  # e-ink fonts (dyslexic default)
  # e_ink iMonolexic
  # e_ink Monolexic   I-serifless
  # e_ink iUnolexic   f-extended
  # e_ink Unolexic    f-extended I-serifless
  # e_ink iGeolexic   a-single
  # e_ink Geolexic    a-single   I-serifless
  # special spacing
  e_ink igrotesk    f-extended cap extended space 1.6667
  # e_ink grotesk     f-extended cap extended I-serifless space 1.6667
  e_ink ielementary a-single   cap extended space 1.6667
  # e_ink elementary  a-single   cap extended I-serifless space 1.6667

elif [ $ebook ] ;then
  version 10x
  # e-reader fonts
  efont ebook
  efont ebook    I-serifless
  efont ebook    quasi-proportional
  efont ebook    quasi-proportional I-serifless
  efont dyslexic quasi-proportional
  efont dyslexic quasi-proportional I-serifless

elif [ $web ] ;then
  version 10x
  # www fonts
  unset cap
  wfont heading  kobo webfont
  wfont dyslexic f-extended cap 1.045 space 1.515 kobo webfont
  # wfont dyslexic a-single cap 1.045 space 1.515 kobo webfont
  wfont dyslexic quasi-proportional space 1.25 kobo webfont
  dfont cap extended family wIosevka

else
  version 15x
  # desktop fonts
  dfont
  dfont proof
  dfont menu
fi

# vim: set ft=sh: #
