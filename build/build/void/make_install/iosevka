# sdothum - 2016 (c) wtfpl

# Make
# ══════════════════════════════════════════════════════════════════════════════

# ...................................................................... iosevka

usage() {
  echo "usage: $(basename $0) iosevka  code | proof"
  exit 1
}

REPO=/net/depot/Iosevka
FONT=$HOME/.fonts/iosevka

case "$2" in
code     ) shape=500; leading=1450 ;;                 # 1.16 line spacing (over leading 1250)
proof    ) family=-proof; shape=576; leading=1875 ;;  # extended width (shape) 1.5 line spacing
*        ) usage ;;
esac

ifyes "build Iosevka$family" || usage
FONT=$FONT$family
REGULAR=$FONT/ttf/iosevka$family-regular.ttf

cd ${REPO%/*}
# install iosevka repo
[ -d Iosevka ] && { ifno 'sync iosevka repo' || git pull --unshallow; } || git clone --depth 1 https://github.com/be5invis/Iosevka.git
cd Iosevka
# rm -rf build dist 2>/dev/null

# a tweaked :-) atkinson hyperlegible font character emulation
# based on sample.toml (with quote and backtick conversion to single quotes)
echo "
[buildPlans.iosevka$family]      # <iosevka-custom> is your plan name
family = 'Iosevka$family'        # Font menu family name
spacing = 'term'                 # Optional; Values: 'normal', 'term', 'fontconfig-mono', or 'fixed'
serifs = 'sans'                  # Optional; Values: 'sans' or 'slab'
no-cv-ss = true

###################################################################################################
# Configure variants

# Optional; Whether to inherit a 'ss##' variant
[buildPlans.iosevka$family.variants]
# inherits = 'ss01'

# Optional; Configure single character's variant
[buildPlans.iosevka$family.variants.design]
capital-b = 'more-asymmetric'
capital-d = 'more-rounded'
capital-j = 'serifless'
capital-q = 'crossing'
i = 'hooky'
j = 'serifless'
l = 'flat-tailed'
q = 'diagonal-tailed'
r = 'compact'
t = 'flat-hook'
y = 'straight-turn'
zero = 'reverse-slashed'
one = 'nobase-flat-top-serif'
two = 'straight-neck'
four = 'closed'
five = 'oblique-upper-left-bar'
six = 'closed-contour'
eight = 'two-circles'
brace = 'straight'
ampersand = 'upper-open'
# at = 'fourfold'
at = 'short'
paragraph-sign = 'low'
# percent = 'rings-continuous-slash'
percent = 'dots'

# Optional; Configure single character's variant for Upright and Oblique; Overrides [design]
[buildPlans.iosevka$family.variants.upright]

# Optional; Configure single character's variant for Italic only; Overrides [design]
[buildPlans.iosevka$family.variants.italic]
a = 'double-storey'
e = 'flat-crossbar'
f = 'serifless'
k = 'straight'
eszet = 'sulzbacher'

# End variant section
###################################################################################################

###################################################################################################
# Configure ligations

[buildPlans.iosevka$family.ligations]
inherits = 'default-calt'   # Optional; inherits an existing ligation set
disables = []               # Optional; disable specific ligation groups, overrides inherited ligation set
enables  = []               # Optional; enable specific ligation groups, overrides inherited ligation set

# End ligation section
###################################################################################################


###################################################################################################
# Override default building weights
# When buildPlans.<plan name>.weights is absent, all weights would built and mapped to
# default values.
# IMPORTANT : Currently 'menu' and 'css' property only support numbers between 0 and 1000.
#             and 'shape' properly only supports number between 100 and 900 (inclusive).
#             If you decide to use custom weights you have to define all the weights you
#             plan to use otherwise they will not be built.
[buildPlans.iosevka$family.weights.regular]
shape = 400  # Weight for glyph shapes.
menu  = 400  # Weight for the font's names.
css   = 400  # Weight for webfont CSS.

[buildPlans.iosevka$family.weights.book]
shape = 450
menu  = 450  # Use 450 here to name the font's weight 'Book'
css   = 450

[buildPlans.iosevka$family.weights.bold]
shape = 700
menu  = 700
css   = 700

# End weight section
###################################################################################################

###################################################################################################
# Override default building slope sets
# Format: <upright|italic|oblique> = <'normal'|'italic'|'oblique'>
# When this section is absent, all slopes would be built.

[buildPlans.iosevka$family.slopes]
upright = 'normal'
italic = 'italic'
oblique = 'oblique'

# End slope section
###################################################################################################

###################################################################################################
# Override default building widths
# When buildPlans.<plan name>.widths is absent, all widths would built and mapped to
# default values.
# IMPORTANT : Currently 'shape' property only supports numbers between 434 and 664 (inclusive),
#             while 'menu' only supports integers between 1 and 9 (inclusive).
#             The 'shape' parameter specifies the unit width, measured in 1/1000 em. The glyphs'
#             width are equal to, or a simple multiple of the unit width.
#             If you decide to use custom widths you have to define all the widths you plan to use,
#             otherwise they will not be built.

[buildPlans.iosevka$family.widths.normal]
shape = $shape     # Unit Width, measured in 1/1000 em.
menu  = 5          # Width grade for the font's names.
css   = 'normal'   # 'font-stretch' property of webfont CSS.

[buildPlans.iosevka$family.widths.extended]
shape = 576
menu  = 7
css   = 'expanded'

# End width section
###################################################################################################

###################################################################################################
# Character Exclusion
# Specify character ranges in the section below to exclude certain characters from the font being
# built. Remove this section when this feature is not needed.

[buildPlans.iosevka$family.exclude-chars]
ranges = [[10003, 10008]]

# End character exclusion
###################################################################################################

###################################################################################################
# Compatibility Ligatures
# Certain applications like Emacs does not support proper programming liagtures provided by
# OpenType, but can support ligatures provided by PUA codepoints. Therefore you can edit the
# following section to build PUA characters that are generated from the OpenType ligatures.
# Remove this section when compatibility ligatures are not needed.

[[buildPlans.iosevka$family.compatibility-ligatures]]
unicode = 57600 # 0xE100
featureTag = 'calt'
sequence = '<*>'

# End compatibility ligatures section
###################################################################################################

###################################################################################################
# Metric overrides
# Certain metrics like line height (leading) could be overridden in your build plan file.
# Edit the values to change the metrics. Remove this section when overriding is not needed.

[buildPlans.iosevka$family.metric-override]
leading = $leading
winMetricAscenderPad = 0
winMetricDescenderPad = 0
powerlineScaleY = 1
powerlineScaleX = 1
powerlineShiftY = 0
powerlineShiftX = 0

# End metric override section
###################################################################################################
" >$REPO/private-build-plans.toml

# ensure node.js is uptodate
npm install  # ignore npm funding and audit messages
# npm update

npm run build -- ttf::iosevka$family   # post Verda commits

nerdfont ${family#-}

# vim: set ft=sh: #
