{
  "keys": [
    "TOP1", "TOP2", "TOP3", "TOP4", "TOP5", "TOP6",        "TOP7", "TOP8", "TOP9", "TOP10", "TOP11", "TOP12",
    "BOT1", "BOT2", "BOT3", "BOT4", "BOT5", "BOT6",        "BOT7", "BOT8", "BOT9", "BOT10", "BOT11", "BOT12",
                            "THU1", "THU2", "THU3",        "THU4", "THU5", "THU6"
  ],
  "parameters": {
    "layout_function_name": "LAYOUT_georgi",
    "chord_timeout": 200,
    "dance_timeout": 200,
    "leader_timeout": 750,
    "tap_timeout": 50,
    "command_max_length": 5,
    "leader_max_length": 5,
    "dynamic_macro_max_length": 20,
    "string_max_length": 16,
    "long_press_multiplier": 3,
    "default_pseudolayer": "BEAKL"
  },
  "layers": [
    {
      "type": "auto"
    }
  ],
  "chord_sets": [
    {
      "name": "rows",
      "chords": [
        ["TOP1"],                 ["TOP2"],         ["TOP3"],         ["TOP4"],         ["TOP5"],         ["TOP6"],        ["TOP7"],                 ["TOP8"],         ["TOP9"],          ["TOP10"],          ["TOP11"],          ["TOP12"],
        ["TOP1", "BOT1"], ["TOP2", "BOT2"], ["TOP3", "BOT3"], ["TOP4", "BOT4"], ["TOP5", "BOT5"], ["TOP6", "BOT6"],        ["TOP7", "BOT7"], ["TOP8", "BOT8"], ["TOP9", "BOT9"], ["TOP10", "BOT10"], ["TOP11", "BOT11"], ["TOP12", "BOT12"],
        ["BOT1"],                 ["BOT2"],         ["BOT3"],         ["BOT4"],         ["BOT5"],         ["BOT6"],        ["BOT7"],                 ["BOT8"],         ["BOT9"],          ["BOT10"],          ["BOT11"],          ["BOT12"],
                                                                      ["THU1"],         ["THU2"],         ["THU3"],        ["THU4"],                 ["THU5"],         ["THU6"]
      ]
    },
    {
      "name": "steno",
      "chords": [
        ["TOP1"], ["TOP2"], ["TOP3"], ["TOP4"], ["TOP5"], ["TOP6"],        ["TOP7"], ["TOP8"], ["TOP9"], ["TOP10"], ["TOP11"], ["TOP12"],
        ["BOT1"], ["BOT2"], ["BOT3"], ["BOT4"], ["BOT5"], ["BOT6"],        ["BOT7"], ["BOT8"], ["BOT9"], ["BOT10"], ["BOT11"], ["BOT12"],
                                      ["THU1"], ["THU2"], ["THU3"],        ["THU4"], ["THU5"], ["THU6"]
      ]
    }
  ],
  "pseudolayers": [
    {
      "name": "ALWAYS_ON",
      "chords": [
        {
          "type": "visual",
          "chord": [
            "X", " ", " ", " ", " ", " ",        " ", " ", " ", " ", " ", "X",
            "X", " ", " ", " ", " ", " ",        " ", " ", " ", " ", " ", "X",
                           " ", " ", " ",        " ", " ", " "
          ],
          "keycode": "CLEAR_KB"
        },
        {
          "type": "visual",
          "chord": [
            " ", " ", " ", " ", " ", "X",        "X", " ", " ", " ", " ", " ",
            " ", " ", " ", " ", " ", "X",        "X", " ", " ", " ", " ", " ",
                           " ", " ", " ",        " ", " ", " "
          ],
          "keycode": "CMD"
        }
      ]
    },
    {
      "name": "BEAKL",
      "chords": [
        {
          "type": "chord_set",
          "set": "rows",
          "keycodes": [
            "DF(FNC)"   ,           ":",           "Y",           "O",           "U", "-",        "G",           "D",           "N",            "M",           "X", "DF(SYMBOL)",
            "DF(PLOVER)", "KM(Q, LGUI)", "KM(H, LCTL)", "KM(E, LALT)", "KM(A, LSFT)", "W",        "C", "KM(T, RSFT)", "KM(R, RALT)",  "KM(S, RCTL)", "KM(Z, RGUI)",    "DF(NAV)",
            "CAPS"      ,           "J",           ",",           ".",           "K", "'",        "B",           "P",           "L",            "F",           "V",    "DF(NUM)",
                                                                  " ",           " ", " ",        " ",           " ",           " "
          ]
        },
        {
          "type": "visual_array",
          "keys": ["TOP2", "TOP3", "BOT3", "BOT4", "BOT5", "TOP6", "BOT6", "TOP8", "BOT8"],
          "dictionary": [
            ["X", " ", " ", " ", " ", " ", " ", "X", "X",           ";"],
            ["X", "X", " ", " ", " ", " ", " ", " ", " ", "STR(' :: ')"],
            [" ", " ", "X", " ", " ", " ", " ", "X", "X",           "`"],
            [" ", " ", " ", "X", " ", " ", " ", "X", "X",           "~"],
            [" ", " ", " ", "X", "X", " ", " ", "X", "X",     "STR(~/)"],
            [" ", " ", " ", " ", " ", "X", " ", "X", "X",           "_"],
            [" ", " ", " ", " ", " ", " ", "X", "X", "X",          "\""]
          ]
        },
        {
          "type": "visual_array",
          "keys": ["TOP2", "BOT3", "BOT4", "TOP5", "BOT5", "THU4", "THU5"],
          "dictionary": [
            ["X", " ", " ", " ", " ", "X", " ", "M(cap, KC_COLN, KC_ENTER)"],
            [" ", "X", " ", " ", " ", "X", " ", "M(cap, KC_COMM, KC_ENTER)"],
            [" ", " ", "X", " ", " ", "X", " ",  "M(cap, KC_DOT, KC_ENTER)"],
            [" ", " ", " ", "X", "X", "X", " ",   "M(cap, KC_NO, KC_ENTER)"],
            ["X", " ", " ", " ", " ", " ", "X",   "M(cap, KC_COLN, KC_SPC)"],
            [" ", "X", " ", " ", " ", " ", "X",   "M(cap, KC_COMM, KC_SPC)"],
            [" ", " ", "X", " ", " ", " ", "X",    "M(cap, KC_DOT, KC_SPC)"],
            [" ", " ", " ", "X", "X", " ", "X",     "M(cap, KC_NO, KC_SPC)"]
          ]
        },
        {
          "type": "visual_array",
          "keys": ["TOP5", "BOT5", "THU5", "THU6"],
          "dictionary": [
            ["X", "X", " ", "X", "BSPC"],
            [" ", " ", "X", "X",  "DEL"]
          ]
        },
        {
          "type": "visual_array",
          "keys": ["THU1", "THU2", "THU3", "THU4", "THU5", "THU6"],
          "dictionary": [
            ["X", " ", " ", " ", " ", " ",    "KL(ESC, FNC)"],
            [" ", "X", " ", " ", " ", " ",    "KL(I, REGEX)"],
            [" ", " ", "X", " ", " ", " ",    "KL(TAB, NUM)"],
            [" ", " ", " ", "X", " ", " ",  "KL(ENTER, NAV)"],
            [" ", " ", " ", " ", "X", " ",    "KL(SPC, SYM)"],
            [" ", " ", " ", " ", " ", "X", "KL(BSPC, MOUSE)"]
          ]
        }
      ]
    },
    {
      "name": "CAPS",
      "chords": [
        {
          "type": "chord_set",
          "set": "rows",
          "keycodes": [
            " ",                 ":", "MK(KC_LSFT, KC_Y)", "MK(KC_LSFT, KC_O)", "MK(KC_LSFT, KC_U)",                 "-",        "MK(KC_LSFT, KC_G)", "MK(KC_LSFT, KC_D)", "MK(KC_LSFT, KC_N)",  "MK(KC_LSFT, KC_M)", "MK(KC_LSFT, KC_X)", " ",
            " ", "MK(KC_LSFT, KC_Q)", "MK(KC_LSFT, KC_H)", "MK(KC_LSFT, KC_E)", "MK(KC_LSFT, KC_A)", "MK(KC_LSFT, KC_W)",        "MK(KC_LSFT, KC_C)", "MK(KC_LSFT, KC_T)", "MK(KC_LSFT, KC_R)",  "MK(KC_LSFT, KC_S)", "MK(KC_LSFT, KC_Z)", " ",
            " ", "MK(KC_LSFT, KC_J)",                 ",",                 ".", "MK(KC_LSFT, KC_K)",                 "'",        "MK(KC_LSFT, KC_B)", "MK(KC_LSFT, KC_P)", "MK(KC_LSFT, KC_L)",  "MK(KC_LSFT, KC_F)", "MK(KC_LSFT, KC_V)", " ",
                                                                           " ", "MK(KC_LSFT, KC_I)",                 " ",        " "                ,                 " ",                 " "
          ]
        }
      ]
    },
    {
      "name": "REGEX",
      "chords": [
        {
          "type": "chord_set",
          "set": "rows",
          "keycodes": [
            " ", " ", " ", " ", " ", " ",        "*",    "[",   "^",    "]", " ", " ",
            " ", " ", " ", " ", " ", " ",        "?", "LPRN",   "$", "RPRN", " ", " ",
            " ", " ", " ", " ", " ", " ",        "|",    "{",   "#",    "}", " ", " ",
                           " ", " ", " ",        " ",   "\\", "DEL"
          ]
        },
        {
          "type": "visual_array",
          "keys": ["TOP7", "TOP8"],
          "dictionary": [
            ["X", "X", "STR(.*)"]
          ]
        }
      ]
    },
    {
      "name": "SYM",
      "chords": [
        {
          "type": "chord_set",
          "set": "rows",
          "keycodes": [
            " ", " ", ".", "*", "&",  "+",        " ", " ", " ", " ", " ", " ",
            " ", " ", "?", "!", "/",  "|",        " ", " ", " ", " ", " ", " ",
            " ", " ", "<", ">", "%",  "@",        " ", " ", " ", " ", " ", " ",
                           " ", "=", "\\",        " ", " ", " "
          ]
        },
        {
          "type": "visual_array",
          "keys": ["BOT2", "BOT3", "BOT4", "BOT5"],
          "dictionary": [
            ["X", "X", " ", " ", "STR(' <- ')"],
            [" ", " ", "X", "X", "STR(' -> ')"]
          ]
        },
        {
          "type": "visual_array",
          "keys": ["THU1", "THU2"],
          "dictionary": [
            ["X", "X", "STR(=~)"]
          ]
        }
      ]
    },
    {
      "name": "SYMBOL",
      "chords": [
        {
          "type": "chord_set",
          "set": "rows",
          "keycodes": [
            " ", " ", ".", "*", "&",  "+",        "*",    "[",   "^",    "]", " ", "DF(BEAKL)",
            " ", " ", "?", "!", "/",  "|",        "?", "LPRN",   "$", "RPRN", " ",         " ",
            " ", " ", "<", ">", "%",  "@",        "|",    "{",   "#",    "}", " ",         " ",
                   "DF(BEAKL)", "=", "\\",        " ",  "SPC", "DEL"
          ]
        },
        {
          "type": "visual_array",
          "keys": ["BOT2", "BOT3", "BOT4", "BOT5"],
          "dictionary": [
            ["X", "X", " ", " ", "STR(' <- ')"],
            [" ", " ", "X", "X", "STR(' -> ')"]
          ]
        },
        {
          "type": "visual_array",
          "keys": ["THU1", "THU2"],
          "dictionary": [
            ["X", "X", "STR(=~)"]
          ]
        }
      ]
    },
    {
      "name": "NUM",
      "chords": [
        {
          "type": "chord_set",
          "set": "rows",
          "keycodes": [
            " ",    " ",           "A",           "B",                 "C", " ",        "/" , "4", "5", "9", "*",         " ",
            " ", "LGUI", "KM(D, LCTL)", "KM(E, LALT)",       "KM(F, LSFT)", " ",        "." , "1", "2", "3", "-",         " ",
            " ",    " ",           "[",           "]", "MK(KC_LSFT, KC_G)", " ",        "," , "8", "6", "7", "+", "DF(BEAKL)",
                                          "DF(BEAKL)",                 " ", " ",        "\\", "0", "="
          ]
        },
        {
          "type": "visual_array",
          "keys": ["TOP7", "BOT7", "TOP8", "BOT8"],
          "dictionary": [
            ["X", " ", "X", " ", ":"],
            [" ", "X", " ", "X", ";"]
          ]
        },
        {
          "type": "visual_array",
          "keys": ["BOT5", "THU5"],
          "dictionary": [
            ["X", "X", "STR(0x)"]
          ]
        }
      ]
    },
    {
      "name": "FNC",
      "chords": [
        {
          "type": "chord_set",
          "set": "rows",
          "keycodes": [
            "DF(BEAKL)",    " ",    " ",    " ",    " ", " ",        " ", "F4", "F5", "F9", "F12", " ",
            " "        , "LGUI", "LCTL", "LALT", "LSFT", " ",        " ", "F1", "F2", "F3", "F11", " ",
            " "        ,    " ",    " ",    " ",    " ", " ",        " ", "F8", "F6", "F7", "F10", " ",
                                    "DF(BEAKL)",    " ", " ",        " ",  " ",  " "
          ]
        }
      ]
    },
    {
      "name": "NAV",
      "chords": [
        {
          "type": "chord_set",
          "set": "rows",
          "keycodes": [
            " ",                 " ",                 " ", "MK(KC_LCTL, KC_LSFT, KC_C)", "MK(KC_LCTL, KC_LSFT, KC_V)",    " ",        " ", "HOME",   "UP",   "END", "PGUP",         " ",
            " ",              "LGUI",              "LCTL",                       "LALT",                       "LSFT",    " ",        " ",    " ",    " ",     " ",    " ", "DF(BEAKL)",
            " ", "MK(KC_LCTL, KC_Z)", "MK(KC_LCTL, KC_X)",          "MK(KC_LCTL, KC_C)",          "MK(KC_LCTL, KC_V)",    " ",        " ", "LEFT", "DOWN", "RIGHT", "PGDN",         " ",
                                                                            "DF(BEAKL)",                          " ",    " ",        " ",    " ",    " "
          ]
        },
        {
          "type": "visual_array",
          "keys": ["TOP5", "BOT5", "TOP6", "BOT6"],
          "dictionary": [
            ["X", " ", "X", " ", "STR(SECRET)"],
            [" ", "X", " ", "X", "STR(PUBLIC)"]
          ]
        }
      ]
    },
    {
      "name": "MOUSE",
      "chords": [
        {
          "type": "chord_set",
          "set": "rows",
          "keycodes": [
            "RESET"    , " ",    " ",    " ",    " ",    " ",        " ", "BTN1", "MS_U", "BTN2", "WH_U", " ",
            "DF(BEAKL)", " ", "LGUI", "LCTL", "LALT", "LSFT",        " ",    " ",    " ",    " ",    " ", " ",
            " "        , " ",    " ",    " ",    " ",    " ",        " ", "MS_L", "MS_D", "MS_R", "WH_D", " ",
                                 "DF(BEAKL)",    " ",    " ",        " ",    " ",    " "
          ]
        }
      ]
    },
    {
      "name": "STENO",
      "chords": [
        {
          "type": "chord_set",
          "set": "steno",
          "keycodes": [
            "STN_FN" , "STN_S1", "STN_TL", "STN_PL","STN_HL", "STN_ST1",        "STN_ST3", "STN_FR", "STN_PR", "STN_LR", "STN_TR", "STN_DR",
            "STN_PWR", "STN_S2", "STN_KL", "STN_WL","STN_RL", "STN_ST2",        "STN_ST4", "STN_RR", "STN_BR", "STN_GR", "STN_SR", "STN_ZR",
                                           "STN_N1", "STN_A",   "STN_O",        "STN_E"  , "STN_U",  "STN_N7"
          ]
        },
        {
          "type": "visual_array",
          "keys": ["TOP1", "BOT1"],
          "dictionary": [
            ["X", "X", "DF(BEAKL)"]
          ]
        }
      ]
    },
    {
      "name": "PLOVER",
      "chords": [
        {
          "type": "chord_set",
          "set": "steno",
          "keycodes": [
            "KC_NO", "Q", "W", "E", "R", "T",        "Y", "U", "I", "O", "P", "[",
            "KC_NO", "A", "S", "D", "F", "G",        "H", "J", "K", "L", ";", "'",
                               "1", "C", "V",        "N", "M", "1"
          ]
        },
        {
          "type": "visual_array",
          "keys": ["TOP1", "BOT1"],
          "dictionary": [
            ["X", "X", "DF(BEAKL)"]
          ]
        }
      ]
    }
  ],
  "leader_sequences": [],
  "extra_code": "void cap(const struct Chord* self) {\n  switch (*self->state) {\n  case ACTIVATED:\n    tap_key(self->value1);\n    tap_key(self->value2);\n    break;\n  case DEACTIVATED:\n    current_pseudolayer = CAPS;\n    *self->state = IN_ONE_SHOT;\n    break;\n  case FINISHED:\n  case PRESS_FROM_ACTIVE:\n    current_pseudolayer = self->value1;\n    a_key_went_through = false;\n    break;\n  case RESTART:\n    if (a_key_went_through) {\n      current_pseudolayer = self->pseudolayer;\n    } else {\n      *self->state = IN_ONE_SHOT;\n    }\n  default:\n    break;\n  }\n}\n",
  "extra_dependencies": [
    "keymap_steno.h"
  ]
}
