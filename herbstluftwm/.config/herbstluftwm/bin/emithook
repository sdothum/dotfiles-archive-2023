#!/usr/bin/dash
# sdothum - 2016 (c) wtfpl
[ $TRACE ] && CHILD="bin/emithook $@" . $PARENT

# herbstluftwm
# ══════════════════════════════════════════════════════════════════════════════

# ............................................................... Emit hook trap

close=0.05  # close completion delay window

exec 3>"/tmp/flock:$(basename $0)"
if flock -n 3 2>/dev/null ;then
  echo $$ 1>&3
else
  echo 1>&2 "$(basename $0) already running: exiting."
  exit 1
fi

# touch $DYNAMIC (see toggle focus)
monitor=$(herbstclient attr monitors.focus.index)

# force panel title refresh, see draw panel
panel_refresh() { sleep $close; xtitle -f 'T\n' >$(cat $PANEL_FIFO); }

herbstclient --idle '(focus_.*|rule|tag_.*)' | while read hook rule winid ;do
  # script lock to suppress unnecessary emit hook message processing
  # [ -e $LOCK ] && { echo "> (LOCK) $hook $rule $winid" >>$TRACE; continue; }
  [ -e $LOCK  ] && continue
  [ $TRACE    ] && echo "> $hook $rule $winid" >>$TRACE

  # lots of manual tuning here to avoid unnecessary draw refreshes in particular,
  # hence, the fullscreen test. also, see query wname whose conky usage is capitalized
  # on to reinitialze monitor layouts after windows are terminated and focus windows

  case $hook in
    focus_*) case $hook in
               # focus_changed) ([ -e $FULLSCREEN ] && draw refresh || draw root) &  # deprecated with alpine
               focus_changed) if herbstclient compare monitors.focus.index != $monitor ;then
                                monitor=$(herbstclient attr monitors.focus.index)
                                restore panel &
                              fi ;;
     
               focus_window ) [ -e $DYNAMIC ] && (focus window &) || panel_refresh ;;
               focus_frame  ) [ -e $DYNAMIC ] && (focus frame  &) || panel_refresh ;;
             esac
             draw border & ;;
            
    tag_*  ) draw border & ;;

    rule   ) case $rule in
               float     ) herbstclient pseudotile toggle & ;;
               max       ) herbstclient set_layout max & ;;
               vertical  ) herbstclient set_layout vertical & ;;
               horizontal) herbstclient set_layout horizontal & ;;
               grid      ) herbstclient set_layout grid & ;;
               menu      ) draw monitor menu & ;;
     
               fullscreen) if is primary ;then
                             ([ -e $CONKY ] && draw monitor conky fullscreen || draw monitor fullscreen) &
                           else
                             draw monitor secondary fullscreen &
                           fi ;;
     
               # experimental only..
               # focus_frame) [ -e $DYNAMIC ] && (focus frame; bring $winid) & ;;
               *         ) [ $TRACE ] && echo "> undefined rule: $hook [$rule] $winid" >>$TRACE ;;
             esac ;;

    *      ) [ $TRACE ] && echo "> undefined hook: [$hook] $rule $winid" >>$TRACE ;;
  esac
done &

# trap application closes that bypass herbstluftwm window close
focus watch

# vim: set ft=sh: #
