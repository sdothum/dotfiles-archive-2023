# sdothum - 2016 (c) wtfpl

# X11 Dynamic Menu
# ══════════════════════════════════════════════════════════════════════════════

# ............................................................. Systemd services

DAEMON='daemon-reload'
SERVICES='list services'
FILES='list-unit-files'

lib=/usr/lib/systemd/system/

actions() { echo "$defaults\nstatus\nenable\ndisable\nedit"; }
sv()      { eval sudo systemctl $@; }

# restart systemd process
status() {
  if sv status $service ;then
    notify "Systemd $action" "$(sv --no-pager status $service)"
  else
    notify 0 "Systemd $action" "$(sv --no-pager status $service)"
  fi
}

cd $lib
while : ;do
  service=$(systemctl list-unit-files -t service --no-legend | sed -r "s/  */^$SEP /" | column -s^ -t | 
      sed "1i$(X $DAEMON)\n$(X $SERVICES)\n$(X $FILES)" | rmenu 'Systemd' -no-custom) || exit

  service=${service%% *$SEP*}
  case ${service#$(X)} in
    "$DAEMON"  ) sv daemon-reload; notify low 'Systemd daemon-reload' ;;
    "$SERVICES") term 'services' WAIT systemctl --type service --all ;;
    "$FILES"   ) term 'unit-files' WAIT systemctl list-unit-files ;;
  
    *          ) sv status $service && defaults='stop\nrestart' || defaults=start
                 while action=$(actions | rmenu "${service%.service}" -no-custom) || break ;do
                 case $action in
                   start  ) sv start $service; status ;;
                   stop   ) sv stop $service; status ;;
                   restart) sv restart $service; status ;;
                   status ) status; continue ;;
                   enable ) sv enable $service; sv start $service; status ;;
                   disable) sv stop $service; sv disable $service; status ;;
                   edit   ) v -f $lib/$service; continue ;;
                 esac
                 break
               done ;;
  esac
done

# vim: set ft=sh: #
