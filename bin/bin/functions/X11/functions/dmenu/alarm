# sdothum - 2016 (c) wtfpl

# X11 Dynamic Menu
# ══════════════════════════════════════════════════════════════════════════════

# .................................................................. Alarm clock

# Usage: dmenu alarm (interactive mode)
#        dmenu alarm <duration> <description>
#        dmenu alarm <duration> <description> <repetitions>
#
# Note:  duration defaults to minutes (not seconds)

EDIT='edit'

# non-numeric character escapes undesired dmenu match
duration() { echo $1 | sed -r 's/^[^0-9]//; s/([0-9])$/\1m/'; }

timers() {
  while delay=$(echo | mhistory alarm | column -s^ -t | sed "1i$(X $EDIT)" | rmenu 'Duration [m]/s') || exit ;do
    [ "${delay#$(X)}" = "$EDIT" ] && { vim -g -f $HISTORY/alarm; continue; }

    delay=$(unquote $delay)
    if echo $delay | grep -q "$SEP" ;then
      alert=$(echo $delay | sed "s/.*$SEP //")
      delay=$(echo $delay | sed "s/.$SEP.*//")
      break
    fi
    if [ $delay ] ;then
      if echo $delay | grep -q '^[0-9]*[ms]*$' ;then
        delay=$(duration $delay)
        alert=$(echo | rmenu 'Notification') || exit
        [ "$alert" ] || alert=Test
        break
      fi
    fi
  done
  repeat=$(echo 1 | rmenu 'Repetitions') || exit
}

case $# in
  1) delay=$(duration $1); alert=$(echo $delay | sed -r 's/(.*)s/\1 seconds/; s/(.*)m/\1 minutes/'); repeat=1 ;;
  2) delay=$(duration $1); alert=$2; repeat=1 ;;
  3) delay=$(duration $1); alert=$2; repeat=$3 ;;
  *) timers ;;
esac

[ $repeat -gt 1 ] && notify "$alert" "$delay x $repeat" || notify "$alert" "$delay"

alarm() {
  echo $alert | grep -iq test || mhistory alarm "$delay^$SEP $alert"
  for i in $(seq 1 $repeat) ;do
    sleep $delay
    if [ $repeat -gt 1 ] ;then
      [ $(( $repeat - $i )) -gt 0 ] && notify 0 "($i/$repeat)  $alert" || notify critical "($i/$repeat)  $alert" 'Finished!'
    else
      notify critical "$alert"
    fi
    paplay $HOME/music/sonar-ping.wav &
  done
}

alarm &  # if invoked from command line..

# vim: set ft=sh: #
