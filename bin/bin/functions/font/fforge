#!/usr/bin/dash
# sdothum - 2016 (c) wtfpl

# Font
# ══════════════════════════════════════════════════════════════════════════════

# ................................................. monolegible font adjustments
# see make_install iosevka

usage() { echo "usage: $(basename $0) curlyq | punctuation [<emdash>] | ligature [quasi-proportional] | bookweight [--M] | dyslexic [<space>]  [family]"; exit 1; }

MAKE_INSTALL=/tmp/iosevka:make_install

confirm() { [ -e $MAKE_INSTALL ] && ditto make_install "$1" || { ifyes "$1" || exit; }; }
percent() { echo "$1 * 100" | bc | cut -d. -f1; }

# substitute curly tail q
curlyq() {
  # copy char 0u024b and paste to char 0u0071
  # confirm 'atkinson curly tail q'  # see iosevka
  echo "
Open(\$1);
Select(0u024b);
Copy();
Select(0u0071);
Paste();
Generate(\$1);
" >/tmp/fontforge.script

  for i in *ttf ;do
    ditto curlyq $i
    fontforge --script /tmp/fontforge.script $i
  done
}

# wide cell width punctuation
punctuation() {
  width=$(percent $emdash)
  confirm "${emdash}x width emdash"
  echo "
Open(\$1);
Select(0u2012);
Copy();
Select(0u2014);
Paste();
Transform($width,0,0,100,0,0);
Select(0u2026);
Transform(200,0,0,200,0,0);
ChangeWeight(-100);
Move(0,-40);
Generate(\$1);
" >/tmp/fontforge.script

  for i in *.ttf ;do
    ditto emdash $i
    fontforge --script /tmp/fontforge.script $i
  done
}

# double width ligatures
explode() {
  if [ $shape ] ;then
    # explode monospace ligature
    echo "
Select($2);
CopyReference();
Select($1);
Paste();
Select($3);
CopyReference();
Select($1);
PasteWithOffset($shape,0);
Select($4);
CopyReference();
Select($1);
PasteWithOffset($5,$6);
SetWidth($(( $shape * 2 )));
"
  else
    # stretch proportional ligature
    echo "
Select($1);
Transform(${width:-200},0,0,100,0,0);
ChangeWeight(-15);
"
  fi
}

ligature() {
  confirm 'add exploded double width ligatures'
  echo "
Open(\$1);
$(explode 0u00e6 0u0061 0u0065 0u00b7 $(( ${shape:-0} / 2 )) -70)
$(explode 0u0152 0u004f 0u0045 0u00b7 $(( ${shape:-0} / 2 )) 40)
$(explode 0u0153 0u006f 0u0065 0u00b7 $(( ${shape:-0} / 2 )) -70)
$(explode 0u01fc 0u0041 0u0045 0u0301 $(( ${shape:-0} / 2 * 3 )) 200)
$(explode 0u01fd 0u0061 0u0065 0u0301 $(( ${shape:-0} / 2 * 3 )) 0)
Generate(\$1);
" >/tmp/fontforge.script

  for i in *.ttf ;do
    ditto ligature $i
    fontforge --script /tmp/fontforge.script $i
  done
}

# set book weights as regular (for kindle use with bold weights)
regularweight() {
  echo "
Open(\$2);
Select($1);
Copy();
Open(\$1);
Select($1);
Paste();
Generate(\$1);
"
}

bookweight() {
  confirm 'set book weights as regular'
  rm -f *\#1.ttf
  rm -f *.ttx

  # bold **must** be converted too
  fonts='*-book *-bookitalic *-bold *-bolditalic'

  # dump to ttx
  for i in $fonts ;do
    file=$i.ttf
    ditto ttx $file
    ttx $file
  done

  # assign book weights as regular (normal)
  family=${FONT##*/}
  sed -i -e "s/$family Book Version/$family Regular Version/"       \
      -e "s/$family[ -]Book/$family/"                               \
      -e 's/Book/Regular/'                                          \
      *-book.ttx 

  sed -i -e "s/$family Book Italic Version/$family Italic Version/" \
      -e "s/$family[ -]Book/$family/"                               \
      -e 's/Book Italic/Italic/'                                    \
      *-bookitalic.ttx 

  # generate new ttf
  for i in $fonts ;do
    file=$i.ttx
    ditto ttf $file
    ttx $file
  done

  [ $largefont ] && return
  # optically adjust M W w (to regular weight to narrow stroke width for better small font contrast match)
  echo "
$(regularweight 0u004d)
$(regularweight 0u0057)
$(regularweight 0u0077)
" >/tmp/fontforge.script

  echo
  for i in *book*\#1.ttf ;do
    ditto tweak_MWw $i
    case $i in
    *italic*) file=*-italic.ttf ;;
    *       ) file=*regular.ttf ;;
    esac
    fontforge --script /tmp/fontforge.script $i $file
  done
}

# double cell width space
dyslexic() {
  width=$(percent $space)
  confirm "${space}x width space character"
  echo "
Open(\$1);
Select(0u0020);
Transform($width,0,0,100,0,0);
Generate(\$1);
" >/tmp/fontforge.script

  for i in *.ttf ;do
    ditto space $i
    fontforge --script /tmp/fontforge.script $i
  done
}

# main, see iosevka
fforge=$1
case $1 in
curlyq     ) ;;
ligature   ) [ $4 ] && { width=$2; shift 2; } || { shape=$2; shift; } ;;  # see iosevka for tricky bits
punctuation) [ $2 ] && { emdash=$2; shift; } || emdash=2 ;;
bookweight ) [ "$2" = 'largefont' ] && { largefont=true; shift; } ;;
dyslexic   ) [ $2 ] && { space=$2; shift; } || space=2 ;;
*          ) usage ;;
esac
shift
[ $2 ] && usage

FONT=$HOME/.fonts/${1:-Iosevka}
cd $FONT || usage

$fforge

for i in $(find . -iname '*#1.ttf') ;do ditto kindle "$(mv -v $i ${i%#1.ttf}.ttf | cut -d"'" -f4 | sed 's|.*/||')" ;done

# vim: set ft=sh: #
