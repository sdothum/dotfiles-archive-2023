#!/usr/bin/dash
# sdothum - 2016 (c) wtfpl

# Font
# ══════════════════════════════════════════════════════════════════════════════

# ................................................. monolegible font adjustments
# see make_install iosevka

usage() { echo "usage: $(basename $0) curlyq | punctuation [--emdash] | ligature [quasi-proportional] | bookweight [--M] | dyslexic  [family]"; exit 1; }

MAKE_INSTALL=/tmp/iosevka:make_install

confirm() { [ -e $MAKE_INSTALL ] && ditto make_install "$1" || { ifyes "$1" || exit; }; }

# substitute curly tail q
curlyq() {
  ditto iosevka 'copy char 0u024b and paste to char 0u0071'
  confirm 'atkinson q update'
  echo "
Open(\$1);
Select(0u024b);
Copy();
Select(0u0071);
Paste();
Generate(\$1);
" >/tmp/fontforge.script

  for i in *ttf ;do
    ditto fontforge $i
    fontforge --script /tmp/fontforge.script $i
  done
}

# double cell width punctuation
punctuation() {
  confirm 'add double width punctuation'
  # double width emdash (or '--') and ellipsis
  if [ $emdash ] ;then
    echo "
Open(\$1);
Select(0u268b);
Copy();
Select(0u2014);
Paste();
Transform(200,0,0,100,0,0);
Select(0u2026);
Transform(200,0,0,200,0,0);
ChangeWeight(-100);
Move(0,-40);
Generate(\$1);
"
  else
    echo "
Open(\$1);
Select(0u2012);
Copy();
Select(0u2014);
Paste();
Transform(200,0,0,100,0,0);
Select(0u2026);
Transform(200,0,0,200,0,0);
ChangeWeight(-100);
Move(0,-40);
Generate(\$1);
"
  fi >/tmp/fontforge.script

  for i in *.ttf ;do
    ditto emdash $i
    fontforge --script /tmp/fontforge.script $i
  done
}

# double width ligatures
transform() {
  echo "
Select($1);
Transform(${width:-200},0,0,100,0,0);
ChangeWeight(-20);
"
}

ligature() {
  confirm 'add double width ligatures *experimental*'
  echo "
Open(\$1);
$(transform 0u00e6)
$(transform 0u0152)
$(transform 0u0153)
$(transform 0u01fc)
$(transform 0u01fd)
Generate(\$1);
" >/tmp/fontforge.script

  for i in *.ttf ;do
    ditto aechar $i
    fontforge --script /tmp/fontforge.script $i
  done
}

# set book weights as regular (for kindle use with bold weights)
bookweight() {
  confirm 'set book weights as regular'
  rm -f *\#1.ttf
  rm -f *.ttx

  # bold **must** be converted too
  fonts='*-book *-bookitalic *-bold *-bolditalic'

  # dump to ttx
  for i in $fonts ;do
    file=$i.ttf
    ditto ttx $file
    ttx $file
  done

  # assign book weights as regular (normal)
  family=${FONT##*/}
  sed -i -e "s/$family Book Version/$family Regular Version/"       \
      -e "s/$family[ -]Book/$family/"                               \
      -e 's/Book/Regular/'                                          \
      *-book.ttx 

  sed -i -e "s/$family Book Italic Version/$family Italic Version/" \
      -e "s/$family[ -]Book/$family/"                               \
      -e 's/Book Italic/Italic/'                                    \
      *-bookitalic.ttx 

  # generate new ttf
  for i in $fonts ;do
    file=$i.ttx
    ditto ttf $file
    ttx $file
  done

  ditto kindle "$(ls *\#1.ttf)"

  [ $M ] || exit
  # optically adjust M (to weight 400 to narrow stroke width and better match contrast)
  echo "
Open(\$2);
Select(0u004d);
Copy();
Open(\$1);
Select(0u004d);
Paste();
Generate(\$1);
" >/tmp/fontforge.script

  echo
  for i in *book*\#1.ttf ;do
    ditto M $i
    case $i in
    *italic*) file=*-italic.ttf ;;
    *       ) file=*regular.ttf ;;
    esac
    fontforge --script /tmp/fontforge.script $i $file
  done
}

# double cell width space
dyslexic() {
  width=$(echo "$space * 100" | bc | cut -d. -f1)
  confirm "${space}x width space character"
  ditto dyslexic "${space}x width space character"
  echo "
Open(\$1);
Select(0u0020);
Transform($width,0,0,100,0,0);
Generate(\$1);
" >/tmp/fontforge.script

  for i in *.ttf ;do
    ditto emdash $i
    fontforge --script /tmp/fontforge.script $i
  done
}

# main
fforge=$1
case $1 in
curlyq     ) ;;
ligature   ) [ "$2" = 'quasi-proportional' ] && { width=150; shift; } ;;
punctuation) [ "$2" = '--emdash' ] && { emdash=true; shift; } ;;
bookweight ) [ "$2" = '--M' ] && { M=true; shift; } ;;
dyslexic   ) space=$2; shift ;;
*          ) usage ;;
esac
shift
[ $2 ] && usage

FONT=$HOME/.fonts/${1:-Iosevka}
cd $FONT || usage

$fforge

for i in $(find . -iname '*#1.ttf') ;do mv -v $i ${i%#1.ttf}.ttf ;done

# vim: set ft=sh: #
