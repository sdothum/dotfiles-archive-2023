#!/usr/bin/dash
# sdothum - 2016 (c) wtfpl

# Log
# ══════════════════════════════════════════════════════════════════════════════

# ${MSGCOLORS} defined in env

# ..................................................................... Annotate

usage() {
  echo "ditto $argv"
  echo "usage: $(basename $0) [ ERROR | WARNING | INFO ] @ *<desc> | [-t | <desc> | -- | ..]* <message>"
  echo '       where, default <desc> -> "note"'
  echo '                          -- -> line separator'
  echo '                          .. -> justify leader'
  exit 1
}

argv="$@"
[ $leader ] || leader=.  # initial leader

# ATTCOLOR=${BLUE}
ATTCOLOR=${TURQUOISE}
MSGCOLOR=${__YELLOW}

while [ "$1" ] ;do
  case $1 in
  ERR*) MSGCOLOR=${__RED}    ;;
  WAR*) MSGCOLOR=${__ORANGE} ;;
  INF*) MSGCOLOR=${__WHITE}  ;;
  @   ) [ "$2" ] || usage; desc=$2; message=' ';     shift ;;
  @*  ) [ "$2" ] && usage; desc=${1#@}; message=' '        ;;
  -t  ) timestamp="$(date "+%-H %M'%S\" ")"                ;;
  ..  ) [ "$2" ] || usage; justify=true; message=$2; shift ;;
  --  ) separator=true ;;
  *   ) [ "$message" ] && desc=$message; message=$1 ;;
  esac
  shift
done
# [ "$desc" = "$message" ] && usage
[ "$desc" ] || desc=note
desc="$timestamp$desc"

justify() {
  while read line ;do
    # indent=$(echo "$(tput cols) - $(echo $line | wc -L) - 3" | bc)
    indent=$(( $(tput cols) - $(echo $line | wc -L) - 3 ))
    [ $indent -gt 0 ] && leader=$(head -c $indent </dev/zero | tr '\0' "$leader")
    log "${ATTCOLOR}@ $leader ${MSGCOLOR}$line${NOCOLOR}"
    leader=' '
  done
}

annotate() {
  [ $separator ] && drawline $leader
  while read line ;do
    log "${ATTCOLOR}@${desc} ${MSGCOLOR}$line${NOCOLOR}"
  done
}

echo "$message" | sed '/^$/d' | { [ $justify ] && justify || annotate; }  # omit blank lines
unset leader

# vim: set ft=sh: #
