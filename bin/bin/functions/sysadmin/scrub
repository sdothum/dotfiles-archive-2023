#!/usr/bin/bash
# sdothum - 2016 (c) wtfpl

# Sysadmin
# ══════════════════════════════════════════════════════════════════════════════

# .......................................................... Btrfs scrub wrapper

# crontab examples..
# 12am 1st of month <fs> scrub
# crontab: 0 0 1 * * <path>/scrub <fs>
# 12am file directed scrub with "echo <fs> >/tmp/scrub" (nop otherwise)
# crontab: 0 0 * * * [ -s /tmp/scrub ] && <path>/scrub $(cat /tmp/scrub)

usage() { 
  echo "usage: $(basename $0) a'll | boot | root | net | share | backup"
  echo "       $(basename $0) c'ancel | s'tatus | I'nitialize  [boot | root | net | share | backup]"
  exit 1
}

interval=300     # default 5 minute interval reporting
CRON=/tmp/scrub  # see crontab -l

# import user path
. $HOME/bin/functions/shell/user_path colors  # bash shell required for cron colors

# butterfs maintenance
volume() {
  case $@ in
  boot  ) echo /boot ;;
  root  ) echo /boot ;;
  net   ) echo /net ;;
  share ) echo /net ;;
  backup) echo /backup ;;
  *     ) echo $@ ;;
  esac
}

show() {
  V=$(volume $@)
  [ $V ] || usage
  [ $interval -eq 0 ] && usage
  ditto status "every $(( $interval / 60 )) minutes"
  pgrep -f "btrfs scrub start -Bd $V" >/dev/null || in_progress=$@
  while : ;do
    trace "$@"
    sudo btrfs scrub status $V
    pgrep -f "btrfs scrub start -Bd $V" >/dev/null || break
    sleep $interval
  done
  [ $in_progress ] || press_enter
  notify X critical "btrfs scrub $V" "$(sudo btrfs scrub status $V | grep summary | sed -r 's/.*: *//g; s/^(.)/\u\1/')"
  rm -f $CRON  # remove triggered cron scrub, see crontab -l
}

case $1 in
'') [ -e $CRON ] && { rm -f $CRON $CRON:.log; } || usage ;;  # assumes scrub:<fs>.log crontab file naming
a*) scrub boot; scrub share; scrub backup ;;
c*) sudo btrfs scrub cancel $(volume $2) ;;
I*) sudo rm -f /var/lib/btrfs/*.* ;;
s*) tail -f $CRON:$2.log ;;

* ) nohup sudo btrfs scrub start -Bd $(volume $1) >/dev/null 2>&1 &
    log=$CRON:$1.log
    show $1 >$log
    [ $USER != root ] && { pstat Xorg && term "$1" "tail -f $log" || tail -f $log; } ;;
esac

# vim: set ft=sh: #
