#!/usr/bin/dash
# sdothum - 2016 (c) wtfpl

# File
# ══════════════════════════════════════════════════════════════════════════════

# ........................................................................ Print

usage() { echo "usage: $(basename $0) [proof] eject | stdin | <file>.pdf|ps | code | mail | note | text | wiki | wps [<filelist>]"; exit 1; }

PROOF=${PROOF:-$SESSION/proof}

# raspberry pi could not print using /tmp (?)
# TMP=$HOME/tmp
TMP=/tmp

# text defaults
font=Iosevka
fontsize=9
linenumbers='\linenumbers'
spacing='\singlespacing'
fold=80

# unset for direct printing, set for proofing and latex debugging
if   [ "$1" = proof ] ;then proof=true; shift
elif [ -e $PROOF    ] ;then proof=true
else                        lpstat -p $PRINTER >/dev/null 2>&1 || proof=true
fi
# proof reverts to outputting proof debug file
[ $proof ] && proof=$TMP/hardcopy:proof
dotdot=$TMP/dotdot

# ............................................................... Latex preamble

# must escape certain latex characters for fancyhdr and cat body
escape()  { echo $@ | sed -r 's/([#$%&_])/\\\1/g'; }
reverse() { awk '{ for (i=$NF; i>1; i--) printf("%s ", $i) }'; }  # reverse word order
dotdot()  { cat $dotdot; }

# title truncation footwork
truncate() {
  lines=$(fold -sw $(( $fold - 20 )) )
  [ $(echo "$lines" | wc -l) -gt 1 ] && echo '..' >$dotdot || >$dotdot
  echo "$lines" | head -1
}

format() {
  if [ "$title" ] ;then
    title="$(escape $title | truncate | sed 's/ *$//')"
    title="$title$(dotdot)"
  # set title dependent on source, ignore stdin
  elif echo $1 | grep -qv '^/tmp/tmp\.[^ ]*$' ;then
    unset pwd
    if echo $1 | grep -q $HOME ;then
      case $PWD in
        */.config*) pwd=.config/${PWD#*/.config} ;;
        */.vim*   ) pwd=.vim/${PWD#*/.vim} ;;
        */bin/bin*) pwd=${PWD#*/bin/bin/} ;;
        */bin*    ) pwd=${PWD#*/bin/} ;;
        */build*  ) pwd=${PWD#*/build/} ;;
        */vimwiki*) ;;
        *         ) pwd=$PWD ;;
      esac
      [ $pwd ] && title=$pwd/$1 || title=${1%.wiki}
    else
      title=$1
    fi
    # truncate long pathnames
    title="$(echo $title | sed 's,/, ^,g' | reverse | truncate)"
    title="$(dotdot)$(escape $title | reverse | sed 's, *\^,/,g')"
  fi

  (cat <<EOF
\documentclass[]{article}
\usepackage{etoolbox}
\usepackage{fp}
\usepackage{fancyhdr}
\usepackage{fontspec}
\usepackage{geometry}
\usepackage{lineno}
\usepackage{setspace}
\pagestyle{fancy}
\FPadd\hdrsize{$fontsize}{\ifnumgreater{$fontsize}{9}{-2}{\ifnumgreater{$fontsize}{8}{-1}{0}}}
\FPadd\ttlsize{$fontsize}{\ifnumgreater{$fontsize}{8}{-1}{0}}
% bold header
% \newcommand{\hdrfont}{\bfseries\fontsize{\hdrsize}{\hdrsize}\selectfont}%
\newcommand{\hdrfont}{\fontsize{\hdrsize}{\hdrsize}\selectfont}%
\newcommand{\ttlfont}{\fontsize{\ttlsize}{\ttlsize}\selectfont}%
\fancyhf{}
% lighten header underline (0 to turn off)
\renewcommand{\headrulewidth}{0.1pt}
\fancyhead[L]{\hdrfont{\ifstrempty{$time}{\today}{$time}}}
\fancyhead[C]{\ttlfont{$title}}
\fancyhead[R]{\hdrfont{\thepage}}
\setmainfont[]{$font}
\renewcommand\linenumberfont{\selectfont}%
\setlength\linenumbersep{1em}
$linenumbers
$spacing
\geometry{letterpaper,left=100pt,top=75pt,right=50pt,bottom=50pt}
\makeatletter
\newcommand{\verbatimfont}[1]{\def\verbatim@font{#1}}%
\makeatother
\begin{document}
\verbatimfont{\\$font}
\normalfont\fontsize{$fontsize}{$fontsize}\selectfont
\begin{verbatim}
% need to inject a blank line before cat to preserve top of file!
% warning: source file injection with latex file will terminate on \end{verbatim} statement

$(cat "$1")
\end{verbatim}
\end{document}
EOF
  ) | xelatex -jobname="$(basename $1)" -output-directory=$TMP >$TMP/hardcopy.log
}

# .............................................................. Mail formatting

filter() {
  # reduce mail header to essential contact information
  sed -nr '/^(Date|From|To|Cc|Subject): /,$p' | pcregrep -vM 'X-SG-EID: (\n|.)*?[=]' |
      grep -E -vi '^(Accept-Language|AMQ-Delivery-Message-Id.*|authentication-results|Content-.*|Importance|In-Reply-To|List-.*|Message-ID|MIME-Version|PP-Correlation-Id.*|received-spf|References|Reply-To|Return-Path|Sender|Thread-Topic|User-Agent|Thread-Index|X-.*|Tags):' |
      grep -E -v '^ *(boundary=.*|charset=.*|(dkim|spf|dmarc)=pass .*|\(UTC\)|\[[0-9]*\] (https*|mailto):.*)$' |
      sed -r '/(\n|^ )<[^<>]*>$/d'
}

header() {
  title=$(grep -m 1 '^Subject:' $stdin | cut -d' ' -f2-)
  [ "$title" ] || title=$(sed '2,$d' $stdin)

  # [&%] latex special characters in title will interfere with verbatim formatting
  title=$(echo $title |
      sed -re 's/([\&\%])/\\\1/g' \
          -e 's/^ *([Rr][Ee]:* )+//' \
          -e 's/^ *([Ff][Ww][Dd]*: )+//' \
          -e 's/(\[SPAM\])//' \
          -e 's/([^.])[.]$/\1/')

  time=$(grep -m 1 '^Date:' $stdin | cut -d' ' -f2-5)
  time=$(date -d "$time" +'%B %-d, %Y')
}

# ............................................................. UTF-8 conversion

# convert common utf-8 punctuation to ascii equivalents
punctuation() {
  sed -e 's/\xe2\x80\x93/--/g' \
      -e 's/\xe2\x80\x94/---/g' \
      -e "s/\xe2\x80\x99/'/g" \
      -e 's/\xe2\x80\x9c/"/g' \
      -e 's/\xe2\x80\x9d/"/g' \
      -e 's/\xe2\x80\xa6/.../g' \
      -e 's/\xe2\x80?/\n===== UTF-8 =====\n/g'
}

# ................................................................ Print options

print() {
  case $1 in
    *.ps ) title=$1; output=$1 ;;
    *.pdf) pdf2ps "$1"; exec hardcopy "${1%.pdf}.ps" ;;
    *    ) output="$TMP/$(basename $1).pdf"; trap "rm -f $output" EXIT; format "$1" ;;
  esac
  [ $proof ] && zathura "$output" 2>&1 || { notify low "Printing" "$title"; lpr -P $PRINTER -H localhost:631 "$output"; }
}

# lines from stdin are folded
# usage: stdin [header]
stdin() {
  stdin=$(mktemp)
  # tr -cd '\11\12\15\40-\176' | fold -sw $fold >$stdin
  ascii | fold -sw $fold >$stdin
  # set (title, time) format values, see case mail below
  [ $1 ] && $@
  print $stdin
  [ $proof ] || rm $stdin
  hardcopy eject
}

paragraphs() { punctuation | perl -pe 'BEGIN{undef $/;}s/\n *\n *\n( *\n)*/\n\n/smg' | stdin header; }

case $1 in
  ''   ) usage ;;
  eject) [ $proof ] || printf '\033E' | lpr -P $PRINTER; exit ;;
  stdin) stdin ;;
  
  mail ) fontsize=9  # content is piped in from mail application, see alot
         spacing='\onehalfspacing'
         unset linenumbers
         # hexdump log for inspecting unprintable punctuation characters
         [ $proof ] && { cat >$proof; cat $proof | hexdump -C >$proof:hexdump; }
         # contract excessive blank lines
         cat $proof | filter | paragraphs ;;
  
  note ) fontsize=9  # stdin formatting
         spacing='\onehalfspacing'
         unset linenumbers
         cat $proof | paragraphs ;;
  
  text ) fontsize=9
         spacing='\singlespacing'
         linenumbers='\linenumbers' ;;
  
  wiki ) fontsize=10
         spacing='\doublespacing'
         unset linenumbers
         shift
         title=${@##/}
         title=${title%.wiki}
         cat "$@" | stdin ;;
  
  wps  ) fontsize=9  # word document saved as text file
         spacing='\doublespacing'
         unset linenumbers
         shift
         title=${1%.txt}
         # remove document [annotation] and reformat paragraphs
         # contract spaces and leading annotation punctuation (paragraph)
         perl -pe 'BEGIN{undef $/;}s/\[[^]]*\]//smg' "$1" |
             sed -r 's/^(\xe3\x80\x80)*/\n/' | punctuation | sed 's/^\.*  *//; s/  */ /g' |
             stdin ;;
  
  *    ) fontsize=8
         spacing='\onehalfspacing'
         linenumbers='\linenumbers'
         [ "$1" = code ] || noshift=true ;;
esac
[ $noshift ] || shift

# filenames may have blanks, hence, usage of while vs for i in $@
while [ $1 ] ;do
  time=$(date -r "$1" +'%B %-d, %Y')
  print "$1"
  shift
  unset title
done
hardcopy eject

# vim: set ft=sh: #
