#!/usr/bin/dash
# sdothum - 2016 (c) wtfpl

# Dev
# ══════════════════════════════════════════════════════════════════════════════

# ${COLORS} defined in env

# .......................................................................... Git

usage() {
  echo "usage: $(basename $0) [<stowdir>] add <package>[/<filespec>]* | comment [<comment>] | edit | ignore | init | list | log | undo | rm <dir>"
  ditto rules "$(dirname $0)/.dotfiles:folders"
  exit 1
}

[ -d "$1" ] && { STOW="$1"; shift; }  # see config.fish
[ -e $HOME/.git/stow ] && ln -sf $HOME/.git/stow $HOME/stow/.git
# update github dotfiles
# see .gitignore, to remove items from remote repository
# git rm --cached <filespec>
# git rm --cached -r <dir>

# list of folders under stow root
DOTFILES=$(cat ${0%/*}/.dotfiles:folders)
cd $STOW
git reset >/dev/null  # undo any previous aborted dotfiles
# syncthing housekeeping
find . -name '*.sync-conflict-*' -exec rm {} \;
find . -name '*.syncthing.hsts.tmp' -exec rm {} \;
sudo find . -name '.uuid' -exec rm {} \;

init() {
  git init
  git add README.md
  git commit --message="refresh commit"
  git remote add origin git+ssh://git@github.com/sdothum/dotfiles.git
  git push -u origin master
  git remote set-url origin git+ssh://git@github.com:sdothum/dotfiles.git
}

commit() {
  echo
  git commit --message="$DESC"
  git push --force --set-upstream origin master
}

pending() {
  echo $pending | sed -r "s/' (add|rm) '/\n\1 /g; s/^(add|rm) '/\1 /; s/'$//" | while read pending ;do
    ditto $(echo $pending | cut -d' ' -f1) "$(echo $pending | cut -d' ' -f2-)"
  done
  printf "commit? [Abort]/comment.. : ${__WHITE}"
  read DESC
  printf "${NOCOLOR}"
  [ "$DESC" ] || exit 1
  ifyes "Push: $DESC" && commit
}

# add !**<path> to .gitignore for any <path> force warnings
add() {
  for i in $@ ;do
    file=$STOW/$i
    if [ -e "$file" ] ;then
      pending=$(git add -v $force "$file" )
    else
      ditto file "$file"
      usage
    fi
  done
  [ "$pending" ] && pending
}

rm() {
  if [ $1 ] ;then
    DESC=$@
    git rm -r --cached $DESC
    git commit --message="Remove directory \"$DESC\""
    git push origin master
  fi
}

# any updates to push?
# changes=$(git diff --name-only)
# [ -z "$changes" ] && [ -z $1 ] && exit
# [ "$changes" ] && echo "$changes"

# $@ substitution within complex expressions is more predictably handled by var substitution
unset pending
case $1 in
help   ) usage ;;
''     ) for i in $DOTFILES ;do add $i ;done ;;
add    ) shift; force=-f; add $@ ;;

amend    |\
comment) shift; DESC=$@
         [ "$DESC" ] && git commit --amend --no-edit --message="$DESC" || git commit --amend ;;

edit     |\
ignore ) gvim .gitignore ;;

init   ) init ;;
list   ) git log --pretty=format:"%h - %an, %ar : %s" ;;
log    ) git log | less ;;

redo     |\
undo   ) git reset --soft HEAD~
         dotfiles ;;

reset  ) git reset ;;
rm     ) shift; rm $@ ;;
*      ) add $@ ;;
esac

# vim: set ft=sh: #
